{"version":3,"sources":["API/api.js","assets/images/avatar.png","Redux/dialogs-reducer.js","components/News/News.module.css","assets/loader/loader.gif","assets/images/logo.png","components/Login/login.module.css","components/Nav/Nav.module.css","components/common/commonStyles/commonStyles.module.css","components/common/FormControls/FormControls.js","Redux/auth-reducer.js","serviceWorker.js","components/Music/Music.jsx","components/Settings/Settings.jsx","Redux/news-reducer.js","components/News/MyNews/MyNews.jsx","components/News/News.jsx","components/News/NewsContainer.jsx","components/Nav/NavItem/NavItem.jsx","components/Nav/Friends/FriendsItem/FriendsItem.jsx","components/Nav/Friends/Friend.jsx","components/Nav/Nav.jsx","components/Nav/NavContainer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","Redux/users-reducer.js","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/login.jsx","Redux/nav-reducer.js","Redux/reduxStore.js","hoc/withSuspense.js","App.js","index.js","components/common/FormControls/FormControls.module.css","components/common/Preloader/Preloader.jsx","Redux/app-reducer.js","utils/validators/validators.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/Users/User/User.module.css","components/Users/Users.module.css","Redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","page","pageSize","get","then","response","data","getProfile","id","console","warn","profileAPI","follow","userId","post","unfollow","delete","getStatus","updateStatus","status","put","updatePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","module","exports","initialState","dialog","name","messages","message","newMessageActionCreator","messageValue","type","dialogsReducer","state","action","body","Textarea","input","meta","props","hasError","touched","error","className","styles","formControls","Inputarea","createField","placeholder","component","validators","text","validate","isAuth","url","setUserData","payload","setCaptcha","getUserDataThunkCreator","dispatch","a","resultCode","loginThunk","getCaptchaUrl","length","stopSubmit","_error","logoutThunk","authReducer","Boolean","window","location","hostname","match","Music","Settings","newsMessages","newsText","newsReducer","newsMessageBody","NewsItem","NewsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","News","newsItems","map","item","key","news","values","addNews","newsBody","NewsContainer","connect","newText","addNewsCreator","NavItem","activeClassName","s","active","to","navItem","address","val","FriendsItem","navMessagesFriend","friendImg","src","navInfo","picture","alt","Friends","friends","friendsItem","navMessages","navMessagesTitle","Nav","navItems","nav","Friend","NavContainer","Paginator","totalItemsCount","currentPage","changeCurrentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","currentPortion","setCurrentPortion","leftPortionBorder","rightPortionBorder","wrapper","button","onClick","filter","p","cn","selectedPage","listItem","User","user","followingInProgress","photo","photos","small","avatar","followed","disabled","some","Users","totalCount","paginator","users","u","userElement","FOLLOW","isFetching","followSuccess","userID","unfollowSuccess","checkFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","UsersReducer","createSelector","usersPage","getTotalCount","getPageSize","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","getUsersThunkCreator","this","Preloader","React","Component","UsersContainer","bind","items","withRouter","header","logo","style","width","logoutButton","pathname","navLink","HeaderContainer","auth","maxLength30","maxLengthCreator","LoginReduxForm","required","formError","commonStyles","loginForm","checkbox","navReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","app","appReducer","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","withSuspense","fallback","ProfileContainer","lazy","DialogsContainer","App","handleAllUncaughtErrors","PromiseRejectionEvent","reason","addError","initializedApp","addEventListener","removeEventListener","initialized","exact","path","render","AppContainer","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","loader","globalError","deleteError","addGlobalError","setTimeout","promise","Promise","all","value","maxLength","ADD_POST","LIKE","posts","likes","updateProfileData","addNewPost","newPostBody","setStatusAC","like","postId","getProfileThunkCreator","reject","savePhoto","file","profileData","getState","split","errorField","slice","toLowerCase"],"mappings":"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","file":"static/js/main.f406537e.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': 'ab7d5628-aec0-474e-9943-33f227b84e02'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(page, pageSize) {\r\n        return instance.get(`users?page=${page}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getProfile(id) {\r\n        console.warn('Obsolete method, use profileAPI.getProfile, please')\r\n        return profileAPI.getProfile(id)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    },\r\n    updatePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photoFile)\r\n\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile)\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe, captcha = {}) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar.597c1f2a.png\";","const MESSAGE_VALUE = 'dialogs/MESSAGE-VALUE'\r\nconst NEW_MESSAGE = 'dialogs/NEW-MESSAGE'\r\n\r\n\r\n//fake behavior for this page\r\nconst initialState = {\r\n    dialog: [\r\n        {id: 1, name: 'Pasha'},\r\n        {id: 2, name: 'Veronika'},\r\n        {id: 3, name: 'Maxim'},\r\n        {id: 4, name: 'Alexandra'},\r\n        {id: 5, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hey'},\r\n        {id: 2, message: 'How are you'},\r\n        {id: 3, message: 'A nice weather!'},\r\n        {id: 4, message: 'Do you wanna go for a walk?'},\r\n        {id: 5, message: 'dog'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case NEW_MESSAGE: {\r\n            let body = action.messageValue\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages,\r\n                    {id: 6, message: body}]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const messageValueActionCreator = (text) => ({type: MESSAGE_VALUE, text: text})\r\nexport const newMessageActionCreator = (messageValue) => ({type: NEW_MESSAGE, messageValue})\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__TnNeR\"};","module.exports = __webpack_public_path__ + \"static/media/loader.2407b512.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.80e449da.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"login_loginForm__1FDcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2lrDc\",\"item\":\"Nav_item__16rFo\",\"active\":\"Nav_active__3VCgE\",\"friendImg\":\"Nav_friendImg__3Ko3U\",\"navMessagesTitle\":\"Nav_navMessagesTitle__1exBZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"commonStyles_button__3_ryU\"};","import React from \"react\"\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    //input and meta are objects in object props.\r\n    //in props placeholder, in input: value, field name, events\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Inputarea = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControls + \" \" + (hasError && styles.error)}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n////type: password might come in props\r\n\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               component={component}\r\n               validate={validators}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n)\r\n\r\n\r\n\r\n","import {authAPI, securityAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\nconst SET_CAPTCHA = 'auth/SET_CAPTCHA'\r\n\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    url: null //Captcha. if null, captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_CAPTCHA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (userId, login, email, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, login, email, isAuth}\r\n})\r\n\r\nexport const setCaptcha = (url) => ({\r\n    type: SET_CAPTCHA,\r\n    payload: {url}\r\n})\r\n\r\nexport const getUserDataThunkCreator = () => {\r\n\r\n    return async (dispatch) => {\r\n        //return for initializing. any then returns promise\r\n        // and this promise we return in thunk.\r\n        // then we use this returned promise in app-reducer\r\n        let response = await authAPI.me()\r\n\r\n        if (response.data.resultCode == 0) {\r\n            let {id, login, email} = response.data.data\r\n            dispatch(setUserData(id, login, email, true))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const loginThunk = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserDataThunkCreator())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let error = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        ///special action creator from ReduxForm\r\n        dispatch(stopSubmit('login', {_error: error}))\r\n    }\r\n}\r\n\r\n\r\nexport const logoutThunk = () => (dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                //after logout we must set the auth data to null in state\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const url = await securityAPI.getCaptcha()\r\n    dispatch(setCaptcha(url.data.url))\r\n}\r\n\r\nexport default authReducer\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Fake page Music :)\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;\r\n","import React from \"react\";\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Fake page Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n","const ADD_NEWS = 'news/ADD_NEWS'\r\n\r\n\r\n//fake behavior for this page\r\n\r\nconst initialState = {\r\n    newsMessages: [\r\n        {id: 1, newsText: 'New great social network'},\r\n        {id: 2, newsText: 'New great social website'},\r\n        {id: 3, newsText: 'New great social public'},\r\n        {id: 4, newsText: 'New great social game'}\r\n    ]\r\n}\r\nconst newsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEWS:\r\n            let text = action.newsMessageBody\r\n            return {\r\n                ...state,\r\n                newsMessages: [...state.newsMessages, {id: 5, newsText: text}],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addNewsCreator = (newsMessageBody) => ({type: ADD_NEWS, newsMessageBody})\r\n\r\n\r\nexport default newsReducer","import React from 'react'\r\n\r\n\r\nconst NewsItem = (props) => {\r\n    return(\r\n        <div>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default NewsItem","import React from \"react\";\r\nimport NewsItem from \"./MyNews/MyNews\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport styles from './News.module.css'\r\n\r\n\r\nconst News = (props) => {\r\n\r\n    let newsItems = props.newsMessages.map(item => <NewsItem message={item.newsText} key={item.id}/>)\r\n\r\n    let addNews = (values) => {\r\n        props.addNews(values.newsBody)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.news}>\r\n            <div>{newsItems}</div>\r\n            <NewsFormRedux onSubmit={addNews}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst NewsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component='textarea' name='newsBody' placeholder='what`s new today?'/>\r\n            <button>Add News</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewsFormRedux = reduxForm({form: 'newsForm'})(NewsForm)\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport {addNewsCreator} from \"../../Redux/news-reducer\";\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newText: state.news.newText,\r\n        newsMessages: state.news.newsMessages\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNews: (newsMessageBody) => {\r\n            dispatch(addNewsCreator(newsMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst NewsContainer = connect(mapStateToProps, mapDispatchToProps)(News)\r\n\r\nexport default NewsContainer;\r\n","import {NavLink} from \"react-router-dom\";\r\nimport s from \"../Nav.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst NavItem = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <NavLink\r\n                activeClassName={s.active}\r\n                className={s.item} to={`/${props.navItem.address}`}>{props.navItem.val}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavItem","import s from \"./../../Nav.module.css\";\r\nimport React from \"react\";\r\n\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className={s.navMessagesFriend}>\r\n            <img className={s.friendImg}\r\n                 src={props.navInfo.picture}\r\n                 alt=\"\"/>\r\n            <span>{props.navInfo.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsItem","import s from \"./../Nav.module.css\";\r\nimport React from \"react\";\r\nimport FriendsItem from \"./FriendsItem/FriendsItem\";\r\n\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friends = props.friendsItem.map(item => <FriendsItem navInfo={item} key={item.id}/>)\r\n    return (\r\n        <div className={s.navMessages}>\r\n            <div className={s.navMessagesTitle}>Friends</div>\r\n            {friends}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from \"react\";\r\nimport s from './Nav.module.css'\r\nimport NavItem from \"./NavItem/NavItem\";\r\nimport Friends from \"./Friends/Friend\";\r\n\r\n\r\nconst Nav = (props) => {\r\n    let navItems = props.navItem.map(item => <NavItem navItem={item} key={item.id}/>)\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            {navItems}\r\n            <div className={s.navMessages}>\r\n                <Friends friendsItem={props.friendsItem}/>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport s from './Nav.module.css'\r\nimport NavItem from \"./NavItem/NavItem\";\r\nimport Friends from \"./Friends/Friend\";\r\nimport {connect} from \"react-redux\";\r\nimport Nav from \"./Nav\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        navItem: state.nav.navItem,\r\n        friendsItem: state.nav.friends\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n}\r\nconst NavContainer = connect(mapStateToProps, mapDispatchToProps)(Nav)\r\n\r\nexport default NavContainer;\r\n","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\nimport s from './../commonStyles/commonStyles.module.css'\r\nimport cn from 'classnames'\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, changeCurrentPage, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [currentPortion, setCurrentPortion] = useState(1)\r\n    let leftPortionBorder = (currentPortion - 1) * portionSize + 1\r\n    let rightPortionBorder = (currentPortion * portionSize)\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div>\r\n                {currentPortion > 1 &&\r\n                <button className={s.button} onClick={() => setCurrentPortion(currentPortion - 1)}>Prev</button>}\r\n            </div>\r\n\r\n            <div>\r\n                {pages\r\n                    .filter(p => p >= leftPortionBorder && p <= rightPortionBorder)\r\n                    .map(p => {\r\n                        return (\r\n                            <span\r\n                                key={p}\r\n                                onClick={() => {\r\n                                    changeCurrentPage(p)\r\n                                }}\r\n                            ><div className={cn({[styles.selectedPage]: currentPage === p}, styles.listItem)}>{p}</div></span>\r\n                        )\r\n                    })}\r\n            </div>\r\n            <div>\r\n                {currentPortion < portionCount &&\r\n                <button className={s.button} onClick={() => setCurrentPortion(currentPortion + 1)}>Next</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n\r\n\r\n","import React from \"react\";\r\nimport styles from './User.module.css'\r\nimport s from './../../common/commonStyles/commonStyles.module.css'\r\n\r\nimport avatar from '../../../assets/images/avatar.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.wrapper}>\r\n                <div>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img className={styles.photo}\r\n                                 src={user.photos.small != null ? user.photos.small : avatar}/>\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div className={styles.name}>\r\n                        <div>name: {user.name}</div>\r\n                        <hr/>\r\n                        {user.status && <div>status: {user.status}</div>}\r\n                    </div>\r\n                    {/*<div>{'user.location.city'}</div>*/}\r\n                    {/*<div>{'user.location.country'}</div>*/}\r\n\r\n                    <div>{user.followed\r\n                        ? <button className={s.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id)\r\n                                  }\r\n                                  }>Unfollow</button>\r\n\r\n                        : <button className={s.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id)\r\n                                  }\r\n\r\n                                  }>Follow</button>}</div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\n\r\nlet Users = ({totalCount, pageSize, currentPage, changeCurrentPage, ...props}) => {\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className={styles.paginator}>\r\n                    <Paginator totalItemsCount={totalCount}\r\n                               pageSize={pageSize}\r\n                               currentPage={currentPage}\r\n                               changeCurrentPage={changeCurrentPage}\r\n                    />\r\n                </div>\r\n                {\r\n                    props.users.map(u => <div key={u.id} className={styles.userElement}>\r\n                        <User user={u}\r\n                              followingInProgress={props.followingInProgress}\r\n                              unfollow={props.unfollow}\r\n                              follow={props.follow}\r\n\r\n                        /></div>)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;\r\n","import {usersAPI} from \"../API/api\";\r\n\r\nconst FOLLOW = 'users/TOGGLE_FOLLOW'\r\nconst UNFOLLOW = 'users/UNFOLLOW'\r\nconst SET_USERS = 'users/SET_USERS'\r\nconst CHANGE_CURRENT_PAGE = 'users/CHANGE_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT'\r\nconst CHECK_FETCHING = 'users/CHECK_FETCHING'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\n\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    //BUTTON DISABLED\r\n    followingInProgress: []\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //Map for changing something inside arrays, which will come in json\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            }\r\n        case CHANGE_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalCount: action.totalCount\r\n            }\r\n        case CHECK_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        //BUTTON DISABLED\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n////ACTION CREATORS\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID})\r\nexport const unfollowSuccess = (userID) => ({type: UNFOLLOW, userID})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const changeCurrentPage = (currentPage) => ({type: CHANGE_CURRENT_PAGE, currentPage})\r\nexport const setTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount})\r\nexport const checkFetching = (isFetching) => ({type: CHECK_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FETCHING, isFetching, userId})\r\n\r\n/////THUNK CREATORS\r\nexport const getUsersThunkCreator = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(checkFetching(true))\r\n        dispatch(changeCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n        dispatch(checkFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalCount(data.totalCount))\r\n\r\n    }\r\n}\r\n\r\n//common function to avoid doubling of the code\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\n//БЫЛО ДО ЭТОГО\r\n// const follow = (userId) = async (dispatch) => {\r\n//     dispatch(toggleFollowingProgress(true, userId))\r\n//     let response = await userAPI.follow(userId)\r\n//\r\n//     if (response.data.resultCode == 0) {\r\n//         dispatch(followSuccess(userId))\r\n//     }\r\n//     dispatch(toggleFollowingProgress(false, userId))\r\n// }\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n        let actionCreator = unfollowSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport default UsersReducer\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\n///Simple selector for complicated selector\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n// Reselect library, we creating simple selectors for usage in complicated ones\r\n// The second parameter => the thing taken in simple selector\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users/*, isFetching*/) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getTotalCount = (state) => {\r\n    return state.usersPage.totalCount\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    getUsersThunkCreator\r\n} from \"../../Redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalCount,\r\n    getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    changeCurrentPage = (pageNumber) => {\r\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize)\r\n        // this.props.changeCurrentPage(pageNumber)... БЫЛО\r\n        // this.props.checkFetching(true)\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.checkFetching(false)\r\n        //         this.props.setUsers(data.items)\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>{this.props.isFetching ? <Preloader/> : null}</div>\r\n                <Users\r\n                    totalCount={this.props.totalCount}\r\n                    users={this.props.users}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    changeCurrentPage={this.changeCurrentPage}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    isFetching={this.props.isFetching}\r\n                    toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        totalCount: getTotalCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         changeCurrentPage: (pageNumber) => {\r\n//             dispatch(changeCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalCount: (totalCount) => {\r\n//             dispatch(setTotalCountAC(totalCount))\r\n//         },\r\n//         checkFetching: (isFetching) => {\r\n//             dispatch(checkFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    getUsersThunkCreator\r\n})(UsersAPIComponent)\r\n\r\nexport default UsersContainer;\r\n","import React from \"react\";\r\nimport s from './Header.module.css'\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport logo from './../../assets/images/logo.png'\r\nimport cn from 'classnames'\r\nimport styles from './../common/commonStyles/commonStyles.module.css'\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src={logo}\r\n                alt=\"\"\r\n                style={{width: \"70px\"}}\r\n            />\r\n            <div className={s.login}>{props.isAuth\r\n                ? <div>{props.login}\r\n                    <button className={cn(s.logoutButton, styles.button)} onClick={props.logout}>Logout</button>\r\n                </div>\r\n                : props.location.pathname === '/login' ||\r\n                <div><NavLink className={s.navLink} to='/login'>Login</NavLink></div>}</div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunk} from \"../../Redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header\r\n                {...this.props}\r\n                logout={this.props.logoutThunk}\r\n            />\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateTopProps = (state) => ({\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateTopProps, {logoutThunk})(HeaderContainer);\r\n","import React from 'react'\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Inputarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunk} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from './../common/FormControls/FormControls.module.css'\r\nimport s from './login.module.css'\r\nimport commonStyles from './../common/commonStyles/commonStyles.module.css'\r\n\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\nconst LoginForm = ({error, handleSubmit, captcha}) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', Inputarea, [required, maxLength30])}\r\n            {createField('Password', 'password', Inputarea, [required, maxLength30], {type: 'password'})}\r\n            {createField(null, 'checkbox', Inputarea, [], {type: 'checkbox'}, 'Remember Me')}\r\n\r\n            {error && <div className={styles.formError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            {captcha && <div>\r\n                <img src={captcha}/>\r\n                {createField('Enter the symbols', 'captcha', Inputarea, [required])}\r\n            </div>}\r\n            <div>\r\n                <button className={commonStyles.button}>Submit</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nconst Login = ({loginThunk, isAuth, captcha}) => {\r\n    const onSubmit = (formData) => {\r\n        loginThunk(formData.email, formData.password, formData.checkbox, formData.captcha)\r\n    }\r\n    if (isAuth) return <Redirect to={'/profile'}/>\r\n    return (\r\n        <div className={s.loginForm}>\r\n            <h1>Log in</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captcha={captcha}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.url\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login)","const initialState = {\r\n    navItem: [\r\n        {id: 1, val: 'Profile', address: 'profile'},\r\n        {id: 2, val: 'Messages', address: 'dialogs'},\r\n        {id: 3, val: 'Users', address: 'users'},\r\n        {id: 4, val: 'News', address: 'news'},\r\n        // {id: 5, val: 'Music', address: 'music'},\r\n        // {id: 6, val: 'Settings', address: 'settings'},\r\n        // {id: 7, val: 'TodoList', address: 'to-do'}\r\n\r\n\r\n    ],\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Pasha',\r\n            picture: 'https://whatsism.com/uploads/posts/2018-07/1530544023_n6fgwzftnvg.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Veronika',\r\n            picture: 'https://i.pinimg.com/originals/39/df/f1/39dff1a149ce821c91c31a9a7ff29914.jpg'\r\n        },\r\n        {id: 3, name: 'Maxim', picture: 'https://pbs.twimg.com/media/D8r-PBWWsAEXTfK.jpg'}\r\n    ]\r\n\r\n}\r\n\r\nconst navReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\n\r\nexport default navReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport navReducer from \"./nav-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport newsReducer from \"./news-reducer\";\r\nimport UsersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    nav: navReducer,\r\n    news: newsReducer,\r\n    usersPage: UsersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer //import { reducer as formReducer } from 'redux-form'\r\n})\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)\r\n));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleWare))\r\nwindow.store = store\r\nexport default store\r\n","import React, {Suspense} from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            //Preloader will be executed while the js file of the component will be loading\r\n            <Suspense fallback={<Preloader/>}>\r\n                <Component {...props}/>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport NewsContainer from \"./components/News/NewsContainer\";\nimport NavContainer from \"./components/Nav/NavContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {addError, initializedApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./Redux/reduxStore\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\n//LAZY ЗАГРУЗКА\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\nclass App extends React.Component {\n\n    handleAllUncaughtErrors = (PromiseRejectionEvent) => {\n        //as PromiseRejectionEvent might be an object and we can`t add object in conditions\n        if (typeof PromiseRejectionEvent.reason === \"string\") {\n            //error for status comes here\n            this.props.addError(PromiseRejectionEvent.reason)\n        } else if (PromiseRejectionEvent.reason.response && PromiseRejectionEvent.reason.response.status == 403) {\n            this.props.addError(PromiseRejectionEvent.reason.message)\n        }\n\n    }\n\n    componentDidMount() {\n        //APP INITIALIZATION. Waiting for response about authentication\n        this.props.initializedApp()\n        //1)Cathing all the rejected uncaught promises\n        window.addEventListener(\"unhandledrejection\", this.handleAllUncaughtErrors)\n    }\n\n    //2) we must remove all the listeners set up in componentDidMount\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.handleAllUncaughtErrors)\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <NavContainer/>\n                <div className={\"app-wrapper-content\"}>\n                    <Switch>\n                        <Route exact path='/'\n                               render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='/Profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n                        <Route path='/Dialogs'\n                               render={withSuspense(DialogsContainer)}/>\n                        <Route path='/News'\n                               render={() => <NewsContainer/>}/>\n                        <Route path='/Music'\n                               render={() => <Music/>}/>\n                        <Route path='/Settings'\n                               render={() => <Settings/>}/>\n                        <Route path='/Users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/Login'\n                               render={() => <Login/>}/>\n                        <Route path='*'\n                               render={() => <div>404 NOT FOUND</div>}/>\n                    </Switch>\n                    {/*because of Switch we don`t need to indicate the exact path,\n                    as it won`t go next after it finds the first appropriate path to show.\n                      Firstly, we need to indicate more explicit paths, then more common*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializedApp, addError})\n)(App)\n\n// wrap AppContainer component with browser router and provider here instead of index js\n// therefore we will be able to test it.\nconst MainApp = (props) => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default MainApp\n\n","import './index.css';\nimport React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from \"./App\";\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__2E_SS\",\"error\":\"FormControls_error__1X6qX\",\"formError\":\"FormControls_formError__1Tcbh\"};","import loader from \"../../../assets/loader/loader.gif\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={loader} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader","import {getUserDataThunkCreator} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = 'app/SET_INITIALIZED'\r\nconst ADD_ERROR = 'app/ADD_ERROR'\r\nconst DELETE_ERROR = 'app/DELETE_ERROR'\r\n\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        case ADD_ERROR:\r\n            return {\r\n                ...state,\r\n                globalError: action.error\r\n            }\r\n        case DELETE_ERROR:\r\n            return {\r\n                ...state,\r\n                globalError: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED})\r\nexport const addGlobalError = (error) => ({type: ADD_ERROR, error})\r\nexport const deleteError = () => ({type: DELETE_ERROR,})\r\n\r\n\r\nexport const addError = (error) => (dispatch) => {\r\n    dispatch(addGlobalError(error))\r\n\r\n    setTimeout(() => {\r\n        dispatch(deleteError())\r\n    }, 10000)\r\n}\r\n\r\nexport const initializedApp = () => (dispatch) => {\r\n    //in getUserData thunk in auth-reducer we returned promise\r\n    let promise = dispatch(getUserDataThunkCreator())\r\n    //we must dispatch initializedSuccess exactly after dispatch above\r\n    //because there is async func which will last some time\r\n    //we are initialized only after the dispatches above\r\n\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer\r\n\r\n\r\n","\r\nexport const required = value => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__iSJ5Q\",\"login\":\"Header_login__3Y5tl\",\"logoutButton\":\"Header_logoutButton__2CmdO\",\"navLink\":\"Header_navLink__2Qd0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__2tnnE\",\"wrapper\":\"Paginator_wrapper__1DvQ7\",\"listPages\":\"Paginator_listPages__cbkNh\",\"listItem\":\"Paginator_listItem__25pEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"User_wrapper__1TwMj\",\"photo\":\"User_photo__3n50l\",\"name\":\"User_name__1-UOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Users_content__23ccf\",\"profileWrapper\":\"Users_profileWrapper__198aZ\",\"profileInfo\":\"Users_profileInfo__2rguo\",\"bg\":\"Users_bg__1WO9v\",\"selectedPage\":\"Users_selectedPage__1cf5s\",\"paginator\":\"Users_paginator__2Iyir\",\"userElement\":\"Users_userElement__2pX0P\"};","import {profileAPI, usersAPI} from \"../API/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST'\r\nconst SET_PROFILE = 'profile/SET_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS'\r\nconst UPDATE_PROFILE_DATA_SUCCESS = 'profile/UPDATE_PROFILE_DATA_SUCCESS'\r\nconst UPDATE_PROFILE_DATA_FAILED = 'profile/UPDATE_PROFILE_DATA_FAILED'\r\nconst LIKE = 'profile/LIKE'\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, post: 'Hello, how are you?', likes: 5},\r\n        {id: 2, post: 'Here is my new post!', likes: 10},\r\n        {id: 3, post: 'Here is my new post!', likes: 0},\r\n        {id: 4, post: 'Here is my new post!', likes: 20}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    updateProfileData: null //true / false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, post: action.newPostBody, likes: 0}]\r\n            }\r\n\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        case SAVE_PHOTO_SUCCESS:  // Pushing new photos\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        case UPDATE_PROFILE_DATA_SUCCESS:\r\n            //two cases for turning on/off the editMode in profile\r\n            return {\r\n                ...state,\r\n                updateProfileData: true\r\n            }\r\n        case UPDATE_PROFILE_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                updateProfileData: false\r\n            }\r\n        case LIKE:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => {\r\n                    if (action.postId === p.id) {\r\n                        return {...p, likes: p.likes + 1}\r\n                    }\r\n                    return p\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const addNewPost = (newPostBody) => ({type: ADD_POST, newPostBody})\r\nexport const setProfile = (profile) => ({type: SET_PROFILE, profile})\r\nexport const setStatusAC = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\nexport const updateProfileDataSuccess = () => ({type: UPDATE_PROFILE_DATA_SUCCESS})\r\nexport const updateProfileDataFailed = () => ({type: UPDATE_PROFILE_DATA_FAILED})\r\nexport const like = (postId) => ({type: LIKE, postId})\r\n\r\n\r\nexport const getProfileThunkCreator = (userId) => {\r\n    return async (dispatch) => {\r\n        let data = await usersAPI.getProfile(userId)\r\n\r\n        dispatch(setProfile(data))\r\n\r\n    }\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n\r\n    dispatch(setStatusAC(response.data))\r\n\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status))\r\n    } else if (response.data.resultCode === 1) {\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.updatePhoto(file)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        //in json we get only photos object from the server\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profileData) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profileData)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfileThunkCreator(userId))\r\n        //     .then(() => {\r\n        //     dispatch(updateProfileDataSuccess())\r\n        // })\r\n    } else {\r\n        //stopSubmit special action from redux form. stops the work of the form\r\n        // delivers a common error or error for special Field depending on the key in the object below\r\n        let error = response.data.messages[0].split('->', 2)\r\n        if (error[0] === 'Invalid url format (Contacts') {\r\n            const errorField = error[1].slice(0, (error[1].length - 1)).toLowerCase()\r\n\r\n\r\n            //square brackets!!!!\r\n            dispatch(stopSubmit('profile-form', {\"contacts\": {[errorField]: response.data.messages[0]}}))\r\n            //for common error\r\n            // dispatch(stopSubmit('profile-form', {_error: response.data.messages[0] }))\r\n            return Promise.reject(response.data.messages[0])\r\n        }\r\n\r\n        // dispatch(updateProfileDataFailed())\r\n    }\r\n}\r\n\r\nexport default profileReducer\r\n\r\n\r\n"],"sourceRoot":""}