{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","assets/images/yes.png","assets/images/no.png","components/Profile/ProfileInfo/StatusHook.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/StatusHook.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","Redux/profile-selectors.js","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","StatusWithHooks","globalError","deleteError","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","className","styles","onClick","ProfileDataFormRedux","reduxForm","form","handleSubmit","contacts","error","onSubmit","cn","buttonStyle","button","s","formError","createField","Inputarea","type","Textarea","Object","keys","map","key","contact","ProfileData","profile","isOwner","goToEditMode","aboutMeWrapper","fullName","aboutMe","lookingForAJob","jobImage","src","Yes","alt","No","lookingForAJobDescription","contactTitle","contactValue","Contacts","ProfileInfo","saveProfile","updateProfileData","showInfo","setShowInfo","profileInfoWrapper","avatarField","profileAvatar","photos","large","avatar","target","files","length","savePhoto","profileInfo","initialValues","formData","then","Post","item","img","message","toLike","id","like","MyPosts","memo","postsItem","posts","reverse","p","post","likes","htmlFor","MyPostsFormRedux","values","addNewPost","newPostBody","maxLength15","maxLengthCreator","Field","component","name","validate","required","placeholder","MyPostsContainer","profilePage","textValue","Profile","content","profileWrapper","Preloader","getProfile","getIsAuth","getStatusSelector","getUserId","userId","getUpdateProfileData","getGlobalError","app","ProfileContainer","match","params","history","push","getProfileThunkCreator","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.0e9676a9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileAvatar\":\"ProfileInfo_profileAvatar__3TOZf\",\"jobImage\":\"ProfileInfo_jobImage__2_6lu\",\"contact\":\"ProfileInfo_contact__19HV4\",\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__yaL-u\",\"avatarField\":\"ProfileInfo_avatarField__171IU\",\"profileInfo\":\"ProfileInfo_profileInfo__1KlcP\",\"aboutMeWrapper\":\"ProfileInfo_aboutMeWrapper__1mjKU\",\"button\":\"ProfileInfo_button__2CM1Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2_eUF\",\"profileWrapper\":\"Profile_profileWrapper__LrUvv\",\"profileInfo\":\"Profile_profileInfo__-dBTF\",\"bg\":\"Profile_bg__21c9F\"};","module.exports = __webpack_public_path__ + \"static/media/yes.bbcb42eb.png\";","module.exports = __webpack_public_path__ + \"static/media/no.bf5d695c.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"globalError\":\"StatusHook_globalError__1woDU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ZFx6G\",\"img\":\"Post_img__2vqMW\"};","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./StatusHook.module.css\"\r\n\r\nconst StatusWithHooks = ({globalError, deleteError, ...props}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>Status: {props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n            {globalError ? <div>\r\n                <p className={styles.globalError}>Some error happened: {globalError}</p>\r\n                <button onClick={() => {\r\n                    deleteError()\r\n                    setStatus('')\r\n                }}>OK\r\n                </button>\r\n            </div> : null}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusWithHooks","import {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {createField, Inputarea, Textarea} from \"../../common/FormControls/FormControls\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport styles from \"../../common/FormControls/FormControls.module.css\";\r\nimport buttonStyle from \"./../../common/commonStyles/commonStyles.module.css\";\r\nimport cn from 'classnames'\r\n\r\nlet ProfileDataForm = ({handleSubmit, contacts, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <button className={cn(buttonStyle.button, s.button)}>Save</button>\r\n            {error && <div className={styles.formError}>{error}</div>}\r\n            <br/>\r\n            <b>Full name:</b>{createField(\"Full Name\", 'fullName', Inputarea)}\r\n            <b>About me: </b>{createField(\"About Me\", 'aboutMe', Inputarea)}\r\n            <b>Looking for a job: </b>{createField(null, 'lookingForAJob', Inputarea, [], {type: 'checkbox'})}\r\n            <b>Professional\r\n                skills: </b>{createField(\"My professional skills\", 'lookingForAJobDescription', Textarea, [])}\r\n            {Object.keys(contacts).map(key => {\r\n                //if we get an object, we can iterate like that\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key} :</b>{createField(key, \"contacts.\" + key, Inputarea)}</div>\r\n            })}\r\n        </form>\r\n    )\r\n}\r\n\r\nlet ProfileDataFormRedux = reduxForm({form: 'profile-form'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux\r\n\r\n","import s from \"./ProfileInfo.module.css\";\r\nimport styles from \"./../../common/commonStyles/commonStyles.module.css\";\r\n\r\nimport React, {useState} from \"react\";\r\nimport Yes from '../../../assets/images/yes.png'\r\nimport No from '../../../assets/images/no.png'\r\nimport StatusWithHooks from \"./StatusHook\";\r\nimport avatar from \"./../../../assets/images/avatar.png\"\r\nimport ProfileDataFormRedux from \"./ProfileDataForm\";\r\nimport cn from 'classnames'\r\n\r\n\r\nconst ProfileInfo = ({profile, isOwner, saveProfile, updateProfileData, globalError, deleteError, ...props}) => {\r\n\r\n    let onAvatarPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [showInfo, setShowInfo] = useState(false)\r\n\r\n    //instead of:\r\n    // let onSubmit = (formData) => {\r\n    //     saveProfile(formData)\r\n    //     updateProfileData && setEditMode(false)\r\n    // }\r\n\r\n    let onSubmit = (formData) => {\r\n\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.profileInfoWrapper}>\r\n            <div className={s.avatarField}>\r\n                <div>\r\n                    <img\r\n                        className={s.profileAvatar}\r\n                        src={profile.photos.large || avatar}\r\n                        alt=\"\"\r\n                    />\r\n                </div>\r\n                <div>\r\n                    {isOwner && <input type={'file'} onChange={onAvatarPhotoSelected}/>}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={s.profileInfo}>\r\n                <StatusWithHooks\r\n                    globalError={globalError}\r\n                    deleteError={deleteError}\r\n                    aboutMe={profile.aboutMe}\r\n                    updateStatus={props.updateStatus}\r\n                    status={props.status}\r\n                />\r\n                {showInfo\r\n                    ? editMode\r\n                        // initial values - MAGIC of redux form. finds name in Field and\r\n                        // if it finds appropriate property in object profile, returns to input value\r\n                        ?\r\n                        <ProfileDataFormRedux initialValues={profile} contacts={profile.contacts} onSubmit={onSubmit}/>\r\n                        : <div>\r\n                            <button className={cn(styles.button, s.button)} onClick={() => setShowInfo(false)}>Hide\r\n                                Information\r\n                            </button>\r\n                            <ProfileData goToEditMode={() => setEditMode(true)} profile={profile} isOwner={isOwner}\r\n                                         saveProfile={saveProfile}/>\r\n                        </div>\r\n\r\n\r\n                    : <button className={cn(styles.button, s.button)} onClick={() => setShowInfo(true)}>Show\r\n                        information</button>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.aboutMeWrapper}>\r\n            <div>\r\n                {isOwner &&\r\n                <button className={cn(styles.button, s.button)} onClick={() => goToEditMode()}>Edit</button>}\r\n                <br/>\r\n                <b>Full Name: {profile.fullName}</b>\r\n                <br/>\r\n                <b>About Me:</b><p>{profile.aboutMe}</p>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob\r\n                ? <img className={s.jobImage} src={Yes} alt=\"\"/>\r\n                : <img className={s.jobImage} src={No} alt=\"\"/>}\r\n                {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b><p>{profile.lookingForAJobDescription}</p>\r\n                </div>}\r\n\r\n            </div>\r\n            <div>\r\n                <h4>Websites:</h4>\r\n                {Object.keys(profile.contacts).map(key => {\r\n                    return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nlet Contacts = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle} :</b> {contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Post.module.css'\r\nimport styles from \"./../../../common/commonStyles/commonStyles.module.css\"\r\n\r\nconst Post = props => {\r\n\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img className={s.img}\r\n                     src=\"https://steamuserimages-a.akamaihd.net/ugc/927045848749581623/9C40119AF9CDDEE16EC0B9D40CF04AF15C6AB3C5/\"/>\r\n            </div>\r\n            <div>\r\n\r\n                <span>{props.message}</span>\r\n                <br/>\r\n                <button onClick={() => props.toLike(props.id)} className={styles.button}>Like!</button>\r\n                <b> {props.like}</b>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport Post from './Posts/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsItem = [...props.posts].reverse().map(p => <Post toLike={props.like} id={p.id} message={p.post} key={p.id}\r\n                                                              like={p.likes}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addNewPost(values.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"form\">My posts</label>\r\n            <div>\r\n                <MyPostsFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div>\r\n                {postsItem}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst maxLength15 = maxLengthCreator(15)\r\nconst MyPostsForm = (props) => {\r\n\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name='newPostBody'\r\n                validate={[required, maxLength15]}\r\n                placeholder='type your new post here'\r\n\r\n\r\n            />\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: 'addPostsForm'})(MyPostsForm)\r\n\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addNewPost, like} from \"../../../Redux/profile-reducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        textValue: state.profilePage.textValue\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addNewPost, like})(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = ({globalError, deleteError, ...props}) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.profileWrapper}>\r\n                <div className={s.profileInfo}>\r\n                    <ProfileInfo\r\n                        globalError={globalError}\r\n                        updateProfileData={props.updateProfileData}\r\n                        savePhoto={props.savePhoto}\r\n                        isOwner={props.isOwner}\r\n                        updateStatus={props.updateStatus}\r\n                        status={props.status}\r\n                        profile={props.profile}\r\n                        saveProfile={props.saveProfile}\r\n                        deleteError={deleteError}\r\n                    />\r\n                </div>\r\n                <MyPostsContainer />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\nexport const getStatusSelector = (state) => {\r\n    return state.profilePage.status\r\n}\r\nexport const getUserId = (state) => {\r\n    return state.auth.userId\r\n}\r\nexport const getUpdateProfileData = (state) => {\r\n    return state.profilePage.updateProfileData\r\n}\r\nexport const getGlobalError = (state) => {\r\n    return state.app.globalError\r\n}","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileThunkCreator,\r\n    getStatus,\r\n    savePhoto, saveProfile,\r\n    updateStatus\r\n} from \"../../Redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getGlobalError,\r\n    getIsAuth,\r\n    getProfile,\r\n    getStatusSelector,\r\n    getUpdateProfileData,\r\n    getUserId\r\n} from \"../../Redux/profile-selectors\";\r\nimport {deleteError} from \"../../Redux/app-reducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    //getting rid of duplicating the code in componentDidMount and componentDidUpdate\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n            //One more option of redirect. the old feature. better to use Redirect component\r\n            // because we interfering in component lifecycle.\r\n            // we can do like that if we need a redirect after the button push, but better to do it through state\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getProfileThunkCreator(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Profile\r\n            {...this.props}\r\n            profile={this.props.profile}\r\n            updateStatus={this.props.updateStatus}\r\n            status={this.props.status}\r\n            updateProfileData={this.props.updateProfileData}\r\n            saveProfile={this.props.saveProfile}\r\n            isOwner={!this.props.match.params.userId}\r\n            //if in URL no id, isOwner becomes true\r\n            savePhoto={this.props.savePhoto}\r\n            globalError={this.props.globalError}\r\n            deleteError={this.props.deleteError}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isAuth: getIsAuth(state),\r\n        status: getStatusSelector(state),\r\n        userId: getUserId(state),\r\n        updateProfileData: getUpdateProfileData(state),\r\n        globalError: getGlobalError(state),\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getProfileThunkCreator, getStatus, updateStatus, savePhoto, saveProfile, deleteError}),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}