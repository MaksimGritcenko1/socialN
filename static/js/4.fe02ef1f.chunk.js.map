{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Message","className","s","message","Dialog","dialog","id","name","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","Dialogs","messages","map","m","key","dialogs","d","dialogsWrapper","values","sendMessage","dialogsBody","compose","messageValue","dialogsPage","dispatch","newMessageActionCreator"],"mappings":"qNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAStC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBChB7EM,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCUvKC,EARC,SAACN,GACb,OACI,yBAAKO,UAAWC,IAAEC,SACbT,EAAMS,U,QCOJC,EARA,SAACV,GACZ,OACI,yBAAKO,UAAWC,IAAEG,QACd,6BAAK,kBAAC,IAAD,CAASV,GAAI,YAAcD,EAAMY,IAAKZ,EAAMa,S,iBC+BvDC,EAAmBC,YAAU,CAACC,KAAM,kBAAjBD,EATL,SAACf,GACjB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAU,WAAWP,KAAK,cAAcQ,YAAY,8BAC3D,oDAQGC,EAnCC,SAACtB,GACb,IAAIuB,EAAWvB,EAAMuB,SAASC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAShB,QAASgB,EAAEhB,QAASiB,IAAKD,EAAEb,QACvEe,EAAU3B,EAAMW,OAAOa,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAQhB,GAAIgB,EAAEhB,GAAIC,KAAMe,EAAEf,KAAMa,IAAKE,EAAEhB,QAO3E,OACI,yBAAKL,UAAWC,IAAEqB,gBACd,yBAAKtB,UAAWC,IAAEmB,SACbA,GAEL,yBAAKpB,UAAWC,IAAEe,UACbA,EACD,kBAACT,EAAD,CAAkBG,SAXV,SAACa,GACjB9B,EAAM+B,YAAYD,EAAOE,mB,wBCYlBC,sBACX9B,aAlBkB,SAACV,GACnB,MAAO,CACHyC,aAAczC,EAAM0C,YAAYD,aAChCX,SAAU9B,EAAM0C,YAAYZ,SAC5BZ,OAAQlB,EAAM0C,YAAYxB,OAC1BjB,OAAQD,EAAME,KAAKD,WAIF,SAAC0C,GACtB,MAAO,CACHL,YAAa,SAACG,GACVE,EAASC,YAAwBH,SAOzCtC,IAFWqC,CAGbX","file":"static/js/4.fe02ef1f.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__2pb8l\",\"dialogs\":\"Dialogs_dialogs__3Wvy6\",\"dialog\":\"Dialogs_dialog__1RWVu\",\"messages\":\"Dialogs_messages__10DBM\",\"message\":\"Dialogs_message__2tq3u\"};","import s from \"./../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div><NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Message from \"./Messages/Messages\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let messages = props.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    let dialogs = props.dialog.map(d => <Dialog id={d.id} name={d.name} key={d.id}/>)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.dialogsBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogs}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <DialogsFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component='textarea' name='dialogsBody' placeholder='type your message here...'/>\r\n            <button>Send message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({form: 'AddDialogsForm'})(DialogsForm)\r\n\r\n\r\nexport default Dialogs","import React from 'react'\r\nimport {messageValueActionCreator, newMessageActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messageValue: state.dialogsPage.messageValue,\r\n        messages: state.dialogsPage.messages,\r\n        dialog: state.dialogsPage.dialog,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (messageValue) => {\r\n            dispatch(newMessageActionCreator(messageValue))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}